.ttt {
  /* Local design tokens (scoped to component) */
  --box: 4px;
  --line: 12px;
  --cell: 64px;
  --mark-scale: 0.75;
  --o-scale: 0.71;
  --scrub-height: 250vh; /* how long the scrub takes */

  /* Scroll state (row layout multipliers; 1=row, 0=grid) */
  --rowX: 1;
  --rowY: 1;

  color: var(--color-white);
  display: grid;
  justify-items: center; /* center within content column */
  gap: 0.8em;
  min-block-size: var(--scrub-height); /* consume scroll while pinned */
  position: relative;
}

.ttt__pin {
  position: sticky;
  top: var(--ttt-top, 0px); /* set via JS to match header offset */
}

.ttt__frame {
  /* keep interaction normal; no fixed overlay */
  display: grid;
  place-items: center;
  inline-size: min(100%, calc(var(--cell) * 9)); /* wide enough for 1×9 row */
  overflow: hidden; /* prevent overlap with surrounding text */
}

/* 3×3 board */
.ttt__board {
  inline-size: calc(var(--cell) * 3);
  block-size: calc(var(--cell) * 3);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  position: relative;
  /* Offset the board rightward in row state so the 1×9 fits within the frame */
  transform: translateX(calc(3 * var(--cell) * var(--rowX)));
}

/* A single square (always outlined) */
.ttt__cell {
  position: relative;
  display: grid;
  place-items: center;

  /* Outline perimeter */
  outline: var(--box) solid currentColor;
  outline-offset: calc(var(--box) / -2);
  box-sizing: border-box;

  /* Scroll-driven motion (no CSS transitions) */
  transform: translate(
    calc(var(--x-shift) * var(--rowX)),
    calc(var(--y-shift) * var(--rowY))
  );
  will-change: transform;

  /* Per-cell shift targets (filled via nth-child) for the single-row layout */
  --x-shift: 0px;
  --y-shift: 0px;
}

/* Marks */
.ttt__cell.is-x::before,
.ttt__cell.is-x::after {
  content: "";
  position: absolute;
  inline-size: calc(var(--cell) * var(--mark-scale));
  block-size: var(--line);
  background: currentColor;
}
.ttt__cell.is-x::before { transform: rotate(45deg); }
.ttt__cell.is-x::after  { transform: rotate(-45deg); }

.ttt__cell.is-o::before {
  content: "";
  position: absolute;
  inline-size: calc(var(--cell) * var(--o-scale));
  block-size: calc(var(--cell) * var(--o-scale));
  border: var(--line) solid currentColor;
  border-radius: 50%;
  box-sizing: border-box;
}

/* Row layout recipe (same geometry as demo): */
.ttt__board .ttt__cell:nth-child(1),
.ttt__board .ttt__cell:nth-child(2),
.ttt__board .ttt__cell:nth-child(3) {
  --x-shift: calc(-3 * var(--cell));
  --y-shift: var(--cell);
}
.ttt__board .ttt__cell:nth-child(4),
.ttt__board .ttt__cell:nth-child(5),
.ttt__board .ttt__cell:nth-child(6) {
  --x-shift: 0px;
  --y-shift: 0px;
}
.ttt__board .ttt__cell:nth-child(7),
.ttt__board .ttt__cell:nth-child(8),
.ttt__board .ttt__cell:nth-child(9) {
  --x-shift: calc(3 * var(--cell));
  --y-shift: calc(-1 * var(--cell));
}

/* The element that defines how long you can scrub */
.ttt__scrub { display: none; block-size: 0; }

/* Responsive niceties inside the narrow idea column */
@media (max-width: 40em) {
  .ttt {
    --cell: 56px;
  }
}
